buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.townsfolk:gradle-release:1.2'
    }
}

apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'groovy'
apply plugin: 'release'

group 'com.sqality'

dependencies {
    compile gradleApi()
    compile localGroovy()
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'groovydoc'
    from "$buildDir/docs/groovydoc"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives groovydocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }


            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots') {
                authentication(userName: "$System.env.SONATYPE_USER", password: "$System.env.SONATYPE_PASS")
            }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: "$System.env.SONATYPE_USER", password: "$System.env.SONATYPE_PASS")
            }

            pom.project {
                name 'GradleSCCT'
                description 'gradle-scct is a Gradle plugin for calculating code coverage using SCCT'
                url 'http://sqality.com/'

                scm {
                    url 'scm:git:https://github.com/sqality/gradle-scct.git'
                    developerConnection 'scm:git:https://github.com/sqality/gradle-scct.git'
                }

                licenses {
                    license {
                        name 'unlicense'
                        url 'http://unlicense.org'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'maiflai'
                    }
                }
            }
        }
    }
}
